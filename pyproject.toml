[tool.poetry]
name = "appboot"
version = "0.2.3"
description = "Use FastAPI like Django"
authors = ["liyatao <liyatao001@gmail.com>"]
readme = "README.md"
repository = "https://github.com/taogeYT/appboot"

[tool.poetry.dependencies]
python = "^3.9"
fastapi = ">=0.95.0"
pydantic = ">=1.10.6"
python-dotenv = ">=0.10.4"
jinja2 = ">=2.11.2"
typer = ">=0.8.0"
typing_extensions = ">=4.2.0"
uvicorn = { version = ">=0.21.0", extras = ["standard"] }
sqlalchemy = { version = "^2.0.0", extras = ["asyncio"] }
pydantic-settings = { version = "^2.0.0", optional = true }

[tool.poetry.extras]
pydantic-settings = ["pydantic-settings"]

[tool.poetry.group.dev.dependencies]
ruff = "0.2.0"
mypy = "^1.10.1"
pytest = "^8.2.2"
pytest-asyncio = "^0.23.7"
pytest-mock = "^3.14.0"
ipython = "8.0"
aiosqlite = "^0.20.0"
mkdocs = "^1.6.0"
mkdocs-material = "^9.5.31"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
appboot = 'appboot.commands:app'


[tool.ruff]
line-length = 88
target-version = 'py39'
exclude = ["build", "dist"]

[tool.ruff.lint]
select = ["E", "F", "W", "I"]
ignore = ["E501"]

[tool.ruff.lint.isort]
known-third-party = ["fastapi", "pydantic", "sqlalchemy"]

[tool.ruff.format]
quote-style = "single"


[tool.mypy]
python_version = "3.9"
plugins = ["pydantic.mypy"]
exclude = 'examples'
ignore_missing_imports = true
allow_redefinition = true
no_implicit_optional = true
local_partial_types = true
strict_equality = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
warn_unreachable = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-svv -p no:warnings"
testpaths = ["tests"]
asyncio_mode = "auto"
