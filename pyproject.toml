[tool.poetry]
name = "appboot"
version = "0.1.2"
description = "boot web app project for python"
authors = ["liyatao <liyatao001@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.111.0"
sqlalchemy = "^2.0.31"
pydantic-settings = "^2.3.4"


[tool.poetry.group.dev.dependencies]
ruff = "^0.5.1"
mypy = "^1.10.1"
pytest = "^8.2.2"
pytest-asyncio = "^0.23.7"
pytest-mock = "^3.14.0"
ipython = "8.0"
aiosqlite = "^0.20.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
appboot = 'appboot.commands:app'


[tool.ruff]
line-length = 88
target-version = 'py39'
exclude = ["build", "dist"]

[tool.ruff.lint]
select = ["E", "F", "W", "I"]
ignore = ["E501"]

[tool.ruff.lint.isort]
known-third-party = ["fastapi", "pydantic", "sqlalchemy"]


[tool.mypy]
python_version = "3.9"
plugins = ["pydantic.mypy"]
exclude = 'examples'
ignore_missing_imports = true
allow_redefinition = true
no_implicit_optional = true
local_partial_types = true
strict_equality = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
warn_unreachable = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-svv -p no:warnings"
testpaths = ["tests"]
asyncio_mode = "auto"
