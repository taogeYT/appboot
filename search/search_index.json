{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>AppBoot \u50cfDjango\u4e00\u6837\u4f7f\u7528fastAPI\uff0c\u5185\u7f6esqlalchemy\u5f00\u7bb1\u5373\u7528\uff0c\u65e8\u5728\u63d0\u4f9b\u7c7b\u4f3c Django \u7684\u5f00\u53d1\u4f53\u9a8c\u3002</p>"},{"location":"#_1","title":"\u6280\u672f\u6808","text":"<ul> <li>Python 3.9+</li> <li>FastAPI</li> <li>SQLAlchemy 2.0+</li> <li>Pydantic</li> <li>Uvicorn</li> </ul>"},{"location":"#_2","title":"\u5feb\u901f\u5f00\u59cb","text":""},{"location":"#_3","title":"\u542f\u52a8\u65b0\u9879\u76ee","text":"<pre><code># \u521b\u5efa\u9879\u76ee\u76ee\u5f55\nmkdir mysite\ncd mysite\n# \u521b\u5efa\u865a\u62df\u73af\u5883\u4ee5\u5728\u672c\u5730\u9694\u79bb\u5305\u4f9d\u8d56\npython3 -m venv env\nsource env/bin/activate  # Windows \u4f7f\u7528 `env\\\\Scripts\\\\activate`\n# \u5b89\u88c5 appboot \u548c aiosqlite \u5230\u865a\u62df\u73af\u5883\u4e2d\npip install appboot aiosqlite\n# \u4f7f\u7528\u5355\u4e2a\u5e94\u7528\u7a0b\u5e8f\u8bbe\u7f6e\u65b0\u9879\u76ee\nappboot startproject mysite .  # \u6ce8\u610f\u5c3e\u968f\u7684 '.' \u5b57\u7b26\n# \u542f\u52a8\u670d\u52a1\u5668\uff0c\u5e94\u7528\u8fd0\u884c\u5728 http://127.0.0.1:8000\npython manage.py runserver\n</code></pre>"},{"location":"#app-polls","title":"\u65b0\u5efaAPP polls","text":"<pre><code>python manage.py startapp polls\n</code></pre>"},{"location":"#model","title":"\u521b\u5efa\u6570\u636e\u5e93 Model","text":"<p>\u5728 <code>polls/models.py</code> \u4e2d\u5b9a\u4e49 <code>Question</code> \u6a21\u578b\u3002</p> <pre><code>from datetime import datetime\nfrom sqlalchemy.orm import Mapped\nfrom appboot import models\n\nclass Question(models.Model):\n    question_text: Mapped[str]\n    pub_date: Mapped[datetime]\n</code></pre>"},{"location":"#schema","title":"\u521b\u5efa Schema","text":"<p>\u5728 <code>polls/schema.py</code> \u4e2d\u5b9a\u4e49 <code>QuestionSchema</code>\u3002</p> <pre><code>from appboot.schema import ModelSchema\nfrom polls.models import Question\n\nclass QuestionSchema(ModelSchema):\n    class Meta:\n        model = Question\n</code></pre>"},{"location":"#crud-api","title":"\u7f16\u5199 CRUD API","text":"<p>\u5728 <code>polls/views.py</code> \u4e2d\u7f16\u5199 CRUD API\u3002</p> <pre><code>from fastapi import APIRouter, Depends\nfrom appboot.db import create_tables\nfrom appboot.params import QuerySchema, QueryDepends, PaginationResult\nfrom polls.models import Question\nfrom polls.schema import QuestionSchema\n\nrouter = APIRouter(dependencies=[Depends(create_tables)])\n\n@router.post('/questions/', response_model=QuestionSchema)\nasync def create_question(question: QuestionSchema):\n    return await question.create()\n\n@router.get('/questions/', response_model=PaginationResult[QuestionSchema])\nasync def query_questions(query: QuerySchema = QueryDepends()):\n    return await query.query_result(Question.objects.clone())\n\n@router.get('/questions/{question_id}', response_model=QuestionSchema)\nasync def get_question(question_id: int):\n    return await Question.objects.get(question_id)\n\n@router.put('/questions/{question_id}', response_model=QuestionSchema)\nasync def update_question(question_id: int, question: QuestionSchema):\n    instance = await Question.objects.get(question_id)\n    return await question.update(instance)\n\n@router.delete('/questions/{question_id}', response_model=QuestionSchema)\nasync def delete_question(question_id: int):\n    instance = await Question.objects.get(question_id)\n    return await instance.delete()\n</code></pre>"},{"location":"#api","title":"\u914d\u7f6e API \u8def\u7531\u89c4\u5219","text":"<p>\u5728 <code>mysite/urls.py</code> \u4e2d\u914d\u7f6e API \u8def\u7531\u3002</p> <pre><code>from fastapi import APIRouter\nfrom polls.views import router\n\nroot_router = APIRouter()\nroot_router.include_router(router, prefix='/polls', tags=['polls'])\n</code></pre>"},{"location":"#api_1","title":"\u6d4b\u8bd5 API","text":"<pre><code>python manage.py runserver\n</code></pre> <p>\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u6d4f\u89c8\u5668\u76f4\u63a5\u8bbf\u95ee\u6211\u4eec\u7684 API \u6587\u6863\uff0cURL \u4e3a http://127.0.0.1:8000/docs/\u3002 </p>"},{"location":"#queryschema","title":"\u521b\u5efa\u590d\u6742\u67e5\u8be2\u7684 QuerySchema","text":"<p>\u5728 <code>polls/schema.py</code> \u4e2d\u521b\u5efa <code>QuestionQuerySchema</code> \u4ee5\u8fdb\u884c\u590d\u6742\u67e5\u8be2\u3002</p> <pre><code>from typing import Optional\nfrom appboot.params import QuerySchema\nfrom appboot.filters import EqField, ContainsField\n\nclass QuestionQuerySchema(QuerySchema):\n    ids: Optional[list[int]] = EqField(None, alias='pk', columns='id')  # \u6309 ID \u5217\u8868\u67e5\u8be2 Question\n    question_text: Optional[str] = ContainsField(None)  # question_text \u5b57\u6bb5\u6a21\u7cca\u67e5\u8be2\n</code></pre> <p>\u5728 <code>polls/views.py</code> \u6587\u4ef6\u4e2d\u5c06 <code>QuerySchema</code> \u66ff\u6362\u4e3a <code>QuestionQuerySchema</code>\uff0c\u7136\u540e\u5728\u6d4f\u89c8\u5668\u4e2d\u5237\u65b0\u6587\u6863\u9875\u9762\uff0c\u4f60\u4f1a\u770b\u5230question\u5217\u8868\u63a5\u53e3\u589e\u52a0\u4e86\u4e24\u4e2a\u65b0\u7684\u67e5\u8be2\u53c2\u6570\u3002 </p>"},{"location":"#_4","title":"\u5c1d\u8bd5\u793a\u4f8b","text":"<p>\u8bbf\u95ee Examples \u83b7\u53d6\u66f4\u591a\u793a\u4f8b\u3002</p>"},{"location":"settings/","title":"Settings","text":"<p>\u672c\u6587\u5c06\u4ecb\u7ecd AppBoot Settings \u7684\u5de5\u4f5c\u539f\u7406\u53ca\u5176\u4f7f\u7528\u65b9\u5f0f\u3002</p>"},{"location":"settings/#_1","title":"\u539f\u7406\u8bf4\u660e","text":"<p>\u867d\u7136 AppBoot Settings \u7684\u8bbe\u8ba1\u4e0e Django settings \u76f8\u4f3c\uff0c\u4f46\u5b83\u7684\u5b9e\u73b0\u65b9\u5f0f\u6709\u660e\u663e\u7684\u4e0d\u540c\u3002\u4f60\u53ef\u4ee5\u5c06\u6574\u4e2a <code>settings.py</code> \u6a21\u5757\u7406\u89e3\u4e3a <code>pydantic-settings</code> \u7684\u4e00\u4e2a\u914d\u7f6e\u7c7b\u3002\u56e0\u6b64\uff0c\u5728 AppBoot \u9879\u76ee\u4e2d\uff0c\u914d\u7f6e <code>settings.py</code> \u6587\u4ef6\u65f6\uff0c\u5fc5\u987b\u4e3a\u6bcf\u4e2a\u914d\u7f6e\u53d8\u91cf\u660e\u786e\u6307\u5b9a\u7c7b\u578b\u6ce8\u89e3\uff0c\u5426\u5219\u8bbe\u7f6e\u5c06\u65e0\u6cd5\u751f\u6548\u3002\u53ea\u6709\u660e\u786e\u5b9a\u4e49\u4e86\u7c7b\u578b\u6ce8\u89e3\uff0c<code>pydantic-settings</code> \u624d\u80fd\u6b63\u786e\u89e3\u6790\u914d\u7f6e\uff0c\u4ece\u800c\u66f4\u597d\u5730\u4e0e <code>mypy</code> \u7ed3\u5408\uff0c\u5e2e\u52a9\u6784\u5efa\u89c4\u8303\u4e14\u7a33\u5b9a\u7684 Python \u9879\u76ee\u3002</p>"},{"location":"settings/#_2","title":"\u5185\u7f6e\u9ed8\u8ba4\u914d\u7f6e\u9879\u4ecb\u7ecd","text":"<pre><code>from appboot.conf import DataBases, DictConfig\nPROJECT_NAME: str = ''  # \u9879\u76ee\u540d\u79f0\nUSE_TZ: bool = True  # \u662f\u5426\u4f7f\u7528\u65f6\u533a\nTIME_ZONE: str = 'Asia/Shanghai'  # \u65f6\u533a\u914d\u7f6e\nDATABASES: DataBases = DataBases(default=dict(url='sqlite+aiosqlite:///:memory:'))  # \u6570\u636e\u5e93\u914d\u7f6e\nFASTAPI: DictConfig = {}  # FastAPI \u5e94\u7528\u521d\u59cb\u5316\u53c2\u6570\u914d\u7f6e\nALLOWED_HOSTS: list[str] = ['*']  # \u5141\u8bb8\u7684\u8de8\u7ad9\u8bf7\u6c42\u57df\u540d\uff0c\u9ed8\u8ba4\u6240\u6709\u57df\u540d\u90fd\u5141\u8bb8\nROOT_URLCONF: str = ''  # \u9879\u76ee\u8def\u7531\u914d\u7f6e\u6587\u4ef6\nDEFAULT_TABLE_NAME_PREFIX: str = ''  # \u5168\u5c40\u6570\u636e\u8868\u540d\u79f0\u524d\u7f00\u914d\u7f6e\n</code></pre>"},{"location":"settings/#_3","title":"\u5982\u4f55\u8986\u76d6\u4e0d\u540c\u73af\u5883\u4e0b\u7684\u914d\u7f6e\u9879","text":"<p>\u7531\u4e8e AppBoot \u662f\u901a\u8fc7 <code>pydantic-settings</code> \u5b9e\u73b0\u7684\uff0c\u56e0\u6b64\u5929\u7136\u652f\u6301\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u6216\u914d\u7f6e\u6587\u4ef6\u52a0\u8f7d\u8bbe\u7f6e\u3002\u8be6\u7ec6\u4f7f\u7528\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003 pydantic-settings \u6587\u6863\u3002</p> <p>\u914d\u7f6e\u8986\u76d6\u7684\u4f18\u5148\u7ea7\u5982\u4e0b\uff1a</p> <p><code>settings.py &lt; \u6587\u4ef6\u914d\u7f6e &lt; \u73af\u5883\u53d8\u91cf\u914d\u7f6e</code> \u4f8b\u5982\uff0c\u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u5982\u4e0b\uff1a</p> <pre><code>from appboot.conf import DataBases\nDATABASES: DataBases = DataBases(\n    default=dict(url=f'sqlite+aiosqlite:///db.sqlite3')\n)\n</code></pre> <p>\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u4ee5\u4e0b\u73af\u5883\u53d8\u91cf\u6765\u8986\u76d6\u6570\u636e\u5e93\u914d\u7f6e\uff1a</p> <pre><code># \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\nexport DATABASES='{\"default\": {\"url\": \"sqlite+aiosqlite:///environment.sqlite3\"}}'\n</code></pre> <p>\u6216\u8005\u4f7f\u7528\u5d4c\u5957\u5c5e\u6027\uff1a</p> <pre><code># \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\nexport DATABASES__default__url='sqlite+aiosqlite:///environment.sqlite3'\n</code></pre> <p>\u8fd9\u4e24\u79cd\u65b9\u5f0f\u90fd\u53ef\u4ee5\u8986\u76d6 <code>settings.py</code> \u4e2d\u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u56e0\u4e3a\u73af\u5883\u53d8\u91cf\u7684\u4f18\u5148\u7ea7\u6700\u9ad8\u3002\u6b64\u5916\uff0cAppBoot \u9ed8\u8ba4\u652f\u6301\u4ece <code>.env</code> \u6587\u4ef6\u4e2d\u52a0\u8f7d\u914d\u7f6e\u3002</p>"}]}